# -*- coding: utf-8 -*-
"""homewrok.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zJXYPBtfXIzjOEamsqDQ3Sv0c096l9BN
"""

import sklearn 
import numpy as np
import pandas as pd

# 1 load data
dataset=pd.read_csv("https://raw.githubusercontent.com/SeakKimhour/dataset/main/AMD_cpubenchmarks.csv")

# 2. Dimension of dataset

dataset.shape

dataset.describe()

# 3. Check the variable (Numberical / Categorial)

numberical_variable = dataset.columns[dataset.dtypes != 'object']
dataset[numberical_variable].head(10)

categorical_variable = dataset.columns[dataset.dtypes =="object"]
print(dataset[categorical_variable])

# 4 Missing value 

dataset.isnull()
dataset[numberical_variable].isnull().head(5)
dataset[categorical_variable].isnull().head(5)

# 5. Find out the percentanges of missing values 
dataset.isnull().sum()/ len(dataset)

# 6. Replace value 
dataset.fillna(1)

# 7 . Fillup the mission values 
dataset['Age (months)'].replace(29,90).head(50)

# 8 Create the rows and add it with the original dataset

row_insert = pd.Series(['AND',"Ryzen 6800h", 129, "TR 3090Ti",512, 123, 5129, 400, 3, 2000,"Amazon"], index = ["Brand", "Model", "1-Core Pts", "2-Core Pts", "4-Core Pts", "8-Core Pts", "64-Core Pts", "Samples", "Age (months)", "Current Price (USD)","Seller"])
dataset.append(row_insert, ignore_index= True)

#9 Choose exact row from the dataset
dataset.iloc[0] #ilog help us to get specific row based on the index

dataset.iloc[1:5]
dataset[1:17]

datasetValue = dataset.set_index(dataset['Model']) 
datasetValue.loc['Ryzen TR 3960X']

#10 Rename the column

dataset.rename(columns={'Model' : "Models"})

## 11. Find the min, max, sum, count
print("Max: Data " , dataset["64-Core Pts"].max())
print("Min:  Data", dataset["64-Core Pts"].min())
print("Count: Data", dataset["64-Core Pts"].count())
print("Total: data: ", dataset["64-Core Pts"].sum())

#12 Delete the row and column
datadeteke=dataset
datadeteke=datadeteke.drop("Model", axis= 1)
print(datadeteke)
datadeteke=datadeteke.drop(dataset.columns[2], axis= 1) #Delete the first column 
print(datadeteke)
datadeteke=datadeteke.drop([1], axis = 0) #Delete row where index = 1
print(datadeteke)

# 13 Unique value
dataset["1-Core Pts"].unique()